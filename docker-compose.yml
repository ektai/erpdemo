version: "3"

services:
  traefik:
    image: "traefik:v2.2"
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      # enable traefik
      - "traefik.enable=true"
      # global redirect to https for production only
      - "${HTTPS_REDIRECT_RULE_LABEL}"
      - "${HTTPS_REDIRECT_ENTRYPOINT_LABEL}"
      - "${HTTPS_REDIRECT_MIDDLEWARE_LABEL}"
      # middleware redirect for production only
      - "${HTTPS_USE_REDIRECT_MIDDLEWARE_LABEL}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - cert-vol:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  webserver:
    image: registry.gitlab.com/dokos/dokidocker/dokos-nginx:${DOKOS_VERSION}
    restart: on-failure
    environment:
      - DODOCK_PY=python
      - DODOCK_PY_PORT=8000
      - DODOCK_SOCKETIO=socketio
      - SOCKETIO_PORT=9000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dokos-nginx.rule=Host(${SITES})"
      - "${ENTRYPOINT_LABEL}"
      - "${CERT_RESOLVER_LABEL}"
      - "traefik.http.services.dokos-nginx.loadbalancer.server.port=80"
    volumes:
      - sites-vol:/var/www/html/sites:rw
      - assets-vol:/assets:rw

  python:
    image: registry.gitlab.com/dokos/dokidocker/dokos-worker:${DOKOS_VERSION}
    restart: on-failure
    environment:
      - MARIADB_HOST=${MARIADB_HOST}
      - REDIS_CACHE=redis-cache:6379
      - REDIS_QUEUE=redis-queue:6379
      - REDIS_SOCKETIO=redis-socketio:6379
      - SOCKETIO_PORT=9000
      - AUTO_MIGRATE=1
    depends_on:
      - redis-queue
      - redis-cache
      - socketio
      - mariadb
    volumes:
      - sites-vol:/home/dodock/dodock-bench/sites:rw
      - assets-vol:/home/dodock/dodock-bench/sites/assets:rw

  socketio:
    image: registry.gitlab.com/dokos/dokidocker/dodock-socketio:${DODOCK_VERSION}
    restart: on-failure
    depends_on:
      - redis-socketio
    volumes:
      - sites-vol:/home/dodock/dodock-bench/sites:rw

  worker-default:
    image: registry.gitlab.com/dokos/dokidocker/dokos-worker:${DOKOS_VERSION}
    restart: on-failure
    command: worker
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/dodock/dodock-bench/sites:rw

  worker-short:
    image: registry.gitlab.com/dokos/dokidocker/dokos-worker:${DOKOS_VERSION}
    restart: on-failure
    command: worker
    environment:
      - WORKER_TYPE=short
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/dodock/dodock-bench/sites:rw

  worker-long:
    image: registry.gitlab.com/dokos/dokidocker/dokos-worker:${DOKOS_VERSION}
    restart: on-failure
    command: worker
    environment:
      - WORKER_TYPE=long
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/dodock/dodock-bench/sites:rw

  scheduler:
    image: registry.gitlab.com/dokos/dokidocker/dokos-worker:${DOKOS_VERSION}
    restart: on-failure
    command: schedule
    depends_on:
      - redis-queue
      - redis-cache
    volumes:
      - sites-vol:/home/dodock/dodock-bench/sites:rw

  redis-cache:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis-cache-vol:/data

  redis-queue:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis-queue-vol:/data

  redis-socketio:
    image: redis:latest
    restart: on-failure
    volumes:
      - redis-socketio-vol:/data

  mariadb:
    image: mariadb:10.3
    restart: on-failure
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./installation/dodock-mariadb.cnf:/etc/mysql/conf.d/dodock.cnf
      - mariadb-vol:/var/lib/mysql

  site-creator:
    image: registry.gitlab.com/dokos/dokidocker/dokos-worker:${DOKOS_VERSION}
    restart: "no"
    command: new
    depends_on:
      - python
    environment:
      - SITE_NAME=${SITE_NAME}
      - DB_ROOT_USER=${DB_ROOT_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - INSTALL_APPS=${INSTALL_APPS}
    volumes:
      - sites-vol:/home/dodock/dodock-bench/sites:rw

volumes:
  mariadb-vol:
  redis-cache-vol:
  redis-queue-vol:
  redis-socketio-vol:
  assets-vol:
  sites-vol:
  cert-vol: